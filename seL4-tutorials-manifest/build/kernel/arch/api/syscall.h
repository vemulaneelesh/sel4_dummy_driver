/* @LICENSE(OKL_CORE) */ 

/* This header was generated by kernel/tools/syscall_header_gen.py.
 *
 * To add a system call number, edit kernel/include/api/syscall.xml
 *
 */
#ifndef __ARCH_API_SYSCALL_H
#define __ARCH_API_SYSCALL_H

#ifdef __ASSEMBLER__

/* System Calls */
#define SYSCALL_CALL (-1)
#define SYSCALL_REPLY_RECV (-2)
#define SYSCALL_SEND (-3)
#define SYSCALL_NB_SEND (-4)
#define SYSCALL_RECV (-5)
#define SYSCALL_REPLY (-6)
#define SYSCALL_YIELD (-7)
#define SYSCALL_NB_RECV (-8)

#endif

#define SYSCALL_MAX (-1)
#define SYSCALL_MIN (-8)

#ifndef __ASSEMBLER__

enum syscall {
    SysCall = -1,
    SysReplyRecv = -2,
    SysSend = -3,
    SysNBSend = -4,
    SysRecv = -5,
    SysReply = -6,
    SysYield = -7,
    SysNBRecv = -8,
#if defined DEBUG
    SysDebugPutChar = -9,
    SysDebugHalt = -10,
    SysDebugCapIdentify = -11,
    SysDebugSnapshot = -12,
    SysDebugNameThread = -13,
#endif /* defined DEBUG */
#if defined DANGEROUS_CODE_INJECTION
    SysDebugRun = -14,
#endif /* defined DANGEROUS_CODE_INJECTION */
#if CONFIG_MAX_NUM_TRACE_POINTS > 0
    SysBenchmarkResetLog = -15,
    SysBenchmarkDumpLog = -16,
    SysBenchmarkLogSize = -17,
    SysBenchmarkFinalizeLog = -18,
#endif /* CONFIG_MAX_NUM_TRACE_POINTS > 0 */
};
typedef uint32_t syscall_t;

#endif

#endif /* __ARCH_API_SYSCALL_H */
